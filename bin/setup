#!/bin/bash

BG="\e[104m"
TEXT="\e[97m"
GREEN="\e[32m"
RED="\e[91m"
ENDCOLOR="\e[0m"
BOLD_STYLE="\033[1m"
NORMAL_STYLE="\033[0m"

say () {
  printf "\n${BG}${TEXT} -- $1 -- ${ENDCOLOR}\n"
}

abort_if_not_installed () {
  tool=$1
  installation_instructions_url=$2
  if (command -v $1 &> /dev/null); then
    printf " ‚òëÔ∏è   ${BOLD_STYLE}${tool}${NORMAL_STYLE} is already installed.\n"
  else
    printf "\n${RED}"
    printf " ‚ùå  ${BOLD_STYLE}${tool}${NORMAL_STYLE}${RED} not found.\n"
    printf "     You'll need to install it before proceeding: \n"
    printf "     - ${installation_instructions_url}\n"
    printf "${ENDCOLOR}"
    exit 1
  fi
}

get_tool_version () {
  version=""

  while read -r line; do
    if [[ "$line" =~ .*"$1".* ]]; then
      version=${line#"$1"}
    fi
  done < "./.tool-versions"

  if [ "$version" = "" ]; then
    printf "\n${RED}ERROR: $1 not found in .tool-versions${ENDCOLOR}\n\n"
    exit 1
  else
    echo "$version"
  fi
}

configure_asdf_plugin () {
  printf "${BOLD_STYLE} üß©  Configuring asdf plugin $1...${NORMAL_STYLE}\n\n"
  asdf plugin add $1
  asdf plugin update $1
  asdf install $1 $(get_tool_version $1)
  asdf local $1 $(get_tool_version $1)
  asdf reshim $1
  if [ "$1" = "nodejs" ]; then
    printf "  Installing yarn\n"
    npm install -g yarn
  fi
  printf "\n"
}

printf "${GREEN}Running setup script for HotwireCon\n\n${ENDCOLOR}"

say "Checking for prerequisites"
abort_if_not_installed asdf https://asdf-vm.com/
# abort_if_not_installed doppler https://docs.doppler.com/docs/install-cli
printf "\n"

# say "configuring git remotes"
# git remote add -f staging https://git.heroku.com/ts-accounting-staging.git
# git remote add -f production https://git.heroku.com/ts-accounting-production.git

say "Configuring asdf plugins and installing nodejs and ruby"
configure_asdf_plugin nodejs
configure_asdf_plugin ruby

say "installing Ruby gems"
bundle check || bundle install

say "upgrading teamshares packages"
yarn upgrade @teamshares/design-system

say "installing JS packages"
yarn install

say "setting up database"
bin/rails db:create db:setup

say "setting up assets"
yarn build:all

# say "setting up git hooks"
# yarn run husky install

say "cleaning up"
bin/rails log:clear tmp:clear assets:clobber

printf "\nüßÆ ${GREEN}Good to go!${ENDCOLOR}\n"
